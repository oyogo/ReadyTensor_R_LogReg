#!/usr/bin/env Rscript

library(data.table) # Opted for this, 1. Because its really fast 2. dplyr conflicted with plumber
library(rjson) # for handling json data
# use pattern to read data : this is to make the model generic 
fname_train <- dir(path = "./../ml_inputs_outputs/inputs/data/training/", pattern = "\\_data_file.csv$")
fname_schema <- dir(path = "./../ml_inputs_outputs/inputs/schema/", pattern = "\\_file.json$")

# read in the schema so that we extract the response variable
#dataschema <- fromJSON(file = paste0("./../ml_inputs_outputs/inputs/schema/",fname_schema))
dataschema <- fromJSON(file = "./ml_inputs_outputs/inputs/schema/schema_file.json")

# import the training data 
genericdata <- fread(paste0("./../ml_inputs_outputs/inputs/data/training/",fname_train))

# call the preprocessing pipeline 
source("preprocessor.R")


varr <- preprocessing(fname_train=fname_train,fname_schema=fname_schema,genericdata=genericdata,dataschema=dataschema)[[2]]
training_data <- preprocessing(fname_train=fname_train,fname_schema=fname_schema,genericdata=genericdata,dataschema=dataschema)[[1]]
predictors <- preprocessing(fname_train=fname_train,fname_schema=fname_schema,genericdata=genericdata,dataschema=dataschema)[[3]]


# function to train the model  and save it back into the mounted volume
lets_train <- function(dat,rvar,predictors){

  # get the names of the independent variables and store them as a vector
  #indvars <- names(dat)
  indvars <- predictors$fieldNames

  # reformulate function from the base stats package was quite a savior in creating the from a character vector.
  # this will enable us to supply the response variable and the independent variables as characters and then reformulate will
  # evaluate them as variables.
  theModel <- glm(reformulate(termlabels = indvars, response = rvar),family=binomial(link='logit'), data = dat)

  # save the model into the artifacts folder in the attached volume.
  saveRDS(theModel, "./../ml_inputs_outputs/model/artifacts/model.rds")

}

# calling the model
glmModel <- lets_train(dat=training_data, rvar = varr, predictors = predictors)

